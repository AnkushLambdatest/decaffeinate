aliases:
  restore_cache_step: &restore_cache_step
    restore_cache:
      key: dependency-cache-{{ checksum "yarn.lock" }}
  save_cache_step: &save_cache_step
    save_cache:
      key: dependency-cache-{{ checksum "yarn.lock" }}
      paths:
        - ./node_modules
  install_dependencies_step: &install_dependencies_step
    run:
      name: install-dependencies
      command: yarn install

  unit_test: &unit_test
    steps:
      - checkout
      - *restore_cache_step
      - *install_dependencies_step
      - *save_cache_step
      - run:
          name: build
          command: 'yarn build'
      - run:
          name: tests
          # Why `--maxWorkers`? https://vgpena.github.io/jest-circleci/
          command: 'yarn jest --ci --maxWorkers=2'
      - run:
          name: lint
          command: 'yarn lint'

version: 2
jobs:
  node-v14:
    docker:
      - image: cimg/node:14.19
    <<: *unit_test
    resource_class: large
  node-v16:
    docker:
      - image: cimg/node:16.15
    <<: *unit_test
    resource_class: large
  node-v17:
    docker:
      - image: cimg/node:17.9
    <<: *unit_test
    resource_class: large
  deploy:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - *restore_cache_step
      - *install_dependencies_step
      - *save_cache_step
      - run:
          name: Publish package
          command: 'yarn install && yarn build && npx semantic-release && yarn update-website'

workflows:
  version: 2
  test-deploy:
    jobs:
      - node-v14
      - node-v16
      - node-v17
      - deploy:
          requires:
            - node-v14
            - node-v16
            - node-v17
          filters:
            branches:
              only: master
